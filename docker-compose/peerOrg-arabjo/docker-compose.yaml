

version: '3'

volumes:
  peer0.arabjo.opn.com:
  peer1.arabjo.opn.com:

networks:
  opn-bridge:
  #opn-net:
    #external: true

services:
  peer0-arabjo:
    #container_name: peer0_arabjo_opn_com
    ####scale: 1
    restart: always
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_opn-bridge
      #- FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0-${ORG_NAME}
      - CORE_PEER_ADDRESS=peer0-${ORG_NAME}:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer-${ORG_NAME}:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1-${ORG_NAME}:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0-${ORG_NAME}:7051
      - CORE_PEER_LOCALMSPID=${ORG_MSP}
      - CORE_OPERATIONS_LISTENADDRESS=:8443
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=admin
      - CORE_OPERATIONS_TLS_ENABLED=false
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - /etc/fabric-crypto/crypto-config/peerOrganizations/${ORG_NAME}.opn.com/peers/peer0.${ORG_NAME}.opn.com/msp:/etc/hyperledger/fabric/msp
        - /etc/fabric-crypto/crypto-config/peerOrganizations/${ORG_NAME}.opn.com/peers/peer0.${ORG_NAME}.opn.com/tls:/etc/hyperledger/fabric/tls
        - peer0.${ORG_NAME}.opn.com:/var/hyperledger/production
    ports:
      - 7051:7051
      - 8443:8443
    networks:
      #- opn-net
      - opn-bridge
    depends_on:
      - couchdb0

  peer1-arabjo:
    #container_name: peer1_arabjo.opn.com
    ####scale: 1
    restart: always
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_opn-bridge
      #- FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1-${ORG_NAME}
      - CORE_PEER_ADDRESS=peer1-${ORG_NAME}:8051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
      - CORE_PEER_CHAINCODEADDRESS=peer1-${ORG_NAME}:8052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
      #- CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1-${ORG_NAME}:8051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0-${ORG_NAME}:7051
      - CORE_PEER_LOCALMSPID=${ORG_MSP}
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=admin
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start

    volumes:
        - /var/run/:/host/var/run/
        - /etc/fabric-crypto/crypto-config/peerOrganizations/${ORG_NAME}.opn.com/peers/peer1.${ORG_NAME}.opn.com/msp:/etc/hyperledger/fabric/msp
        - /etc/fabric-crypto/crypto-config/peerOrganizations/${ORG_NAME}.opn.com/peers/peer1.${ORG_NAME}.opn.com/tls:/etc/hyperledger/fabric/tls
        - peer1.${ORG_NAME}.opn.com:/var/hyperledger/production
    ports:
      - 8051:8051
    networks:
      #- opn-net
      - opn-bridge
    depends_on:
      - couchdb1

  cli:
    #container_name: cli
    image: hyperledger/fabric-tools:$IMAGE_TAG
    restart: always
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- FABRIC_LOGGING_SPEC=DEBUG
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0-${ORG_NAME}:7051
      - CORE_PEER_LOCALMSPID=${ORG_MSP}
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${ORG_NAME}.opn.com/peers/peer0.${ORG_NAME}.opn.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${ORG_NAME}.opn.com/peers/peer0.${ORG_NAME}.opn.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${ORG_NAME}.opn.com/peers/peer0.${ORG_NAME}.opn.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${ORG_NAME}.opn.com/users/Admin@${ORG_NAME}.opn.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - /etc/fabric-crypto/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - /etc/fabric-crypto/channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - peer0-arabjo
      - peer1-arabjo
    networks:
      - opn-bridge
      #- opn-net

  couchdb1:
    #container_name: couchdb1
    image: hyperledger/fabric-couchdb
    restart: always
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for opn map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "6984:5984"
    networks:
      - opn-bridge
      #- opn-net
      
  couchdb0:
    #container_name: couchdb0
    image: hyperledger/fabric-couchdb
    restart: always
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for opn map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - opn-bridge
      #- opn-net
